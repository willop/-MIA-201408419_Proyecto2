-- Tabla de membresia
create table Membresia (
ID_membresia number generated by default on null as identity,
Membresia_Tipo_membresia varchar2(7),
Membresia_Inicio_membresia date,
Membresia_Fin_membreia date,
Membresia_Estado_membresia int,
constraint PK_Membresia primary key(ID_membresia)
);


--Tabla de clientes
Create table Cliente (
ID_cliente number generated by default on null as identity,
Cliente_Username varchar2(25) ,
Cliente_Password varchar2(50) ,
Cliente_Nombre varchar2(15) ,
Cliente_Apellido varchar2(15) ,
Cliente_Categoria number(2),
Cliente_Fecha_nacimiento date,
Cliente_Fecha_registro date,
Cliente_Correo_electronico varchar2(20),
Cliente_Foto_perfil varchar2(30),
Cliente_puntaje NUMBER(4),
FK_ID_membresia number(2),
constraint PK_Cliente primary key (ID_cliente),
constraint FK_cliente_membresia Foreign key (FK_ID_membresia) references Membresia(ID_membresia)
);


--Tabla de temporada 
create table Temporada(
ID_temporada number generated by default on null as identity,
Temporada_Nombre_temporada varchar(10),
Temporada_Estado number(1),
Temporada_Inicio_temporada date,
Temporada_Fin_temporada date,
constraint PK_temporada primary key(ID_temporada)
);


--Tabla de ranking
Create table Ranking(
ID_ranking number generated by default on null as identity,
Ranking_Incremento number(5,2),
FK_ID_Temporada int not null,
FK_ID_Cliente int not null, 
CONSTRAINT PK_ranking primary key(ID_ranking),
CONSTRAINT FK_ranking_temporada foreign key(FK_ID_Temporada) references Temporada(ID_temporada),
constraint FK_ranking_cliente foreign key(FK_ID_Cliente) references Cliente(ID_cliente)
);

--tabla de recompensa 
create table Recompensa(
ID_recompensa number generated by default on null as identity,
Recompensa_Cantidad_recompensa number(7,2),
Recompensa_Recompensa_total number(7,2),
Recompensa_Porcentaje_incrementeo number(5,2),
Recompensa_P10 int,
Recompensa_P5 int,
Recompensa_P3 int,
Recompensa_P0 int,
FK_ID_ranking int,
constraint PK_recompensa primary key(ID_recompensa),
constraint FK_recompensa_ranking foreign key(FK_ID_ranking) references Ranking(ID_ranking)
);

--tabla de jornada
create table Jornada(
ID_jornada number generated by default on null as identity,
Jornada_Estado int,
Jornada_Fase int,
Jornada_Fecha_inicio date,
Jornada_Fechar_fin date,
FK_ID_temporada int,
constraint PK_jornada primary key(ID_jornada),
constraint FK_jornada_temporada foreign key(FK_ID_temporada) references Temporada(ID_temporada)
);

--tabla de evento
create table Evento(
ID_evento number generated by default on null as identity,
Evento_color varchar2(10),
Evento_Puntaje_local number(4),
Evento_Puntaje_visitante number(4),
FK_ID_jornada int,
CONSTRAINT PK_evento primary key (ID_evento),
constraint FK_evento_jornada foreign key (FK_ID_jornada) references Jornada(ID_jornada)
);


--tabla de equipo
Create table Equipo(
ID_equipo number generated by default on null as identity,
Equipo_nombre varchar2(15),
FK_ID_equipo int,
constraint PK_equipo primary key(ID_equipo)
);


--tabla de partido
create table Partido(
ID_partido number generated by default on null as identity,
FK_ID_equipo int,
FK_ID_evento int,
constraint PK_Partido primary key(ID_partido),
constraint FK_paritdo_evento FOREIGN key(FK_ID_evento) references Evento(ID_evento),
constraint FK_paritdo_equipo FOREIGN key(FK_ID_equipo) references Equipo(ID_equipo)
);

--tabla de deporte
create table deporte(
ID_deporte number generated by default on null as identity,
Deporte_Nombre int,
Deporte_img varchar2(25),
Deporte_color varchar2(10),
constraint PK_deporte primary key (ID_deporte)
);


--tabla de master detalle evento deporte
create table Detalle_deporte_evento(
ID_detalle_deporte_evento number generated by default on null as identity,
FK_ID_evento int,
FK_ID_deporte int,
constraint PK_Mdetalle_deporte_evento primary key(ID_detalle_deporte_evento),
constraint FK_evento foreign key(FK_ID_evento) references Evento(ID_evento),
constraint FK_deporte foreign key(FK_ID_deporte) references Deporte(ID_deporte)
);


--tabla de prediccion
create table Prediccion(
ID_prediccion number generated by default on null as identity,
Prediccion_resultado number(5,2),
Prediccion_local int,
Prediccion_visitante int,
FK_ID_cliente int,
constraint PK_prediccion primary key(ID_prediccion),
constraint FK_prediccion_cliente foreign key(FK_ID_cliente) references Cliente(ID_cliente)
);

--tabla de master detalle de evento y prediccion
create table Historial_prediccion_evento(
ID_historial_prediccion_evento number generated by default on null as identity,
FK_ID_prediccion int,
FK_ID_evento int,
constraint PK_historial_prediccion_evento primary key(ID_historial_prediccion_evento),
constraint FK_historial_prediccion foreign key(FK_ID_prediccion) references Prediccion(ID_prediccion),
constraint FK_historial_evento foreign key(FK_ID_evento) references Evento(ID_evento)
);


--tabla de posicion
create table Tabla_posicion(
ID_Tabla_posicion number generated by default on null as identity,
Tabla_posicion_Incremento int,
Tabla_posicion_P10 int,
Tabla_posicion_P5 int,
Tabla_posicion_P3 int,
Tabla_posicion_P0 int,
FK_ID_jornada int,
FK_ID_cliente int,
constraint PK_Tabla_posicion primary key(ID_Tabla_posicion),
constraint FK_tabla_posicion_jornada foreign key(FK_ID_jornada) references Jornada(ID_jornada),
constraint FK_tabla_posicion_cliente foreign key(FK_ID_cliente) references Cliente(ID_cliente)
);


--tabla de administrador
create table Administrador(
ID_administrador number generated by default on null as identity,
Administrador_Nombre varchar2(15),
Administrador_Apellido varchar2(15),
Administrador_Username varchar2(15),
Administrador_Password varchar2(15),
Administrador_Foto varchar2(25),
constraint PK_administrador Primary key (ID_administrador)
);

--tabla de chat
Create table Chat(
ID_chat number generated by default on null as identity,
Chat_Mensaje varchar2(200),
FK_ID_cliente int,
FK_ID_administrador int, 
constraint PK_chat primary key (ID_chat),
constraint FK_chat_cliente foreign key(FK_ID_cliente) references Cliente(ID_cliente),
constraint FK_chat_administrador foreign key(FK_ID_administrador) references Administrador(ID_administrador)
);




